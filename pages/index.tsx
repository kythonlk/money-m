import Head from 'next/head'
import { useSession, useSupabaseClient } from '@supabase/auth-helpers-react'
import { Auth, ThemeSupa } from '@supabase/auth-ui-react'
import TodoList from '@/components/TodoList'
import IncomeList from '@/components/Incomes'
import Login from '@/components/Login'
import React, { useEffect, useState } from 'react';

export default function Home() {
  const session = useSession();
  const supabase = useSupabaseClient();
  const [balance, setBalance] = useState<number>(0);

  const updateBalance = async () => {
    if (!session) return;

    const { data: expenses } = await supabase
      .from("todos")
      .select("amount")
      .filter("user_id", "eq", session.user.id);

    const { data: incomes } = await supabase
      .from("income")
      .select("amount")
      .filter("user_id", "eq", session.user.id);

    const expensesTotal = expenses
      ? expenses.reduce((acc, expense) => acc + expense.amount, 0)
      : 0;
    const incomesTotal = incomes
      ? incomes.reduce((acc, income) => acc + income.amount, 0)
      : 0;

    const balanceResult = incomesTotal - expensesTotal;

    setBalance(balanceResult);
  };

  useEffect(() => {
    updateBalance();
  }, [session]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full h-full bg-gray-200">
        {!session ? (
          <Login />
        ) : (
          <div>
            <div className="grid md:grid-cols-2 p-4 md:p-12">
              <TodoList session={session} />
              <IncomeList session={session} />
            </div>
            <div className="flex p-12">
              <div className="grow flex flex-col md:flex-row">
                <p className="">Total Balance :&nbsp;&nbsp;</p>
                <p>LKR {balance}</p>
              </div>
              <button
                className="btn-black w-40"
                onClick={async () => {
                  const { error } = await supabase.auth.signOut();
                  if (error) console.log("Error logging out:", error.message);
                }}
              >
                Logout
              </button>
            </div>
          </div>
        )}
      </div>
    </>
  );
}
